package entities.projectiles;

import java.awt.Color;
import java.awt.Graphics2D;

import entities.GameObject;
import entities.ID;
import entities.LivingEntity;
import general.Game;
import general.Level;
import objects.TileFace;

public class Projectile extends GameObject {
	
	private GameObject shooter;
	private int bounces,immuneFrames = 60;
	private double damage = 10.0;

	public Projectile(Level level, double x, double y, double width, double height, ID id) {
		super(level, x, y, width, height, id);
	}
	public Projectile(Level level, double x, double y, double width, double height, ID id, GameObject shooter) {
		super(level, x, y, width, height, id);
		this.shooter = shooter;
	}
	@Override
	public void tick() {
		
		TileFace face = simulateMapCollsions(false);
		if (face == TileFace.RIGHT || face == TileFace.LEFT) {
			velocity.reverseXVel();
			bounces--;
		} else if (face != null) {
			velocity.reverseYVel();
			bounces--;
		}
		if (bounces < 0)
			dead = true;
		addVelocity();
		
		for (GameObject obj : Game.handler.getObjectList())
			if (obj instanceof LivingEntity && obj.collides(x, y, width, height) && !obj.equals(shooter)) {
//				((LivingEntity) obj).explodeEntity();
				dead = true;
				return;
			} else if (obj instanceof Projectile && !obj.equals(this) && obj.collides(x, y, width, height) && !obj.equals(shooter)) {
				dead = true;
				obj.setDead(true);
				return;
			}
	}

	@Override
	public void render(Graphics2D g) {
		g.setColor(Color.yellow);
		g.fillRect((int)x, (int)y, (int)width, (int)height);
	}
	public GameObject getShooter() {
		return shooter;
	}
	public void setShooter(GameObject shooter) {
		this.shooter = shooter;
	}
	public int getBounces() {
		return bounces;
	}
	public void setBounces(int bounces) {
		this.bounces = bounces;
	}
}
